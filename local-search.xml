<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>k8s集群更新证书</title>
    <link href="/2024/08/12/k8s%E9%9B%86%E7%BE%A4%E6%9B%B4%E6%96%B0%E8%AF%81%E4%B9%A6/"/>
    <url>/2024/08/12/k8s%E9%9B%86%E7%BE%A4%E6%9B%B4%E6%96%B0%E8%AF%81%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h1><p>通过kubeadm部署k8s集群时，除ca证书有效期为10年外，其他证书的有效期仅为1年。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment"># kubeadm certs check-expiration</span><br>[check-expiration] Reading configuration from the cluster...<br>[check-expiration] FYI: You can look at this config file with <span class="hljs-string">&#x27;kubectl -n kube-system get cm kubeadm-config -o yaml&#x27;</span><br><br>CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED<br>admin.conf                 Mar 29, 2025 03:05 UTC   228d            ca                      no      <br>apiserver                  Mar 29, 2025 03:05 UTC   228d            ca                      no      <br>apiserver-etcd-client      Mar 29, 2025 03:05 UTC   228d            etcd-ca                 no      <br>apiserver-kubelet-client   Mar 29, 2025 03:05 UTC   228d            ca                      no      <br>controller-manager.conf    Mar 29, 2025 03:05 UTC   228d            ca                      no      <br>etcd-healthcheck-client    Mar 29, 2025 03:05 UTC   228d            etcd-ca                 no      <br>etcd-peer                  Mar 29, 2025 03:05 UTC   228d            etcd-ca                 no      <br>etcd-server                Mar 29, 2025 03:05 UTC   228d            etcd-ca                 no      <br>front-proxy-client         Mar 29, 2025 03:05 UTC   228d            front-proxy-ca          no      <br>scheduler.conf             Mar 29, 2025 03:05 UTC   228d            ca                      no      <br><br>CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED<br>ca                      Mar 27, 2034 03:05 UTC   9y              no      <br>etcd-ca                 Mar 27, 2034 03:05 UTC   9y              no      <br>front-proxy-ca          Mar 27, 2034 03:05 UTC   9y              no<br></code></pre></td></tr></table></figure><p>当证书到期后，我们需要手动更新证书，官方也提供了<a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/#manual-certificate-renewal">文档</a>。</p><p>由于官方文档不是按照步骤给出，容易出现各种问题，为此，本文记录一下证书更新的步骤。</p><h1 id="2-查看证书过期时间"><a href="#2-查看证书过期时间" class="headerlink" title="2 查看证书过期时间"></a>2 查看证书过期时间</h1><p><strong>所有master节点都要操作</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">kubeadm certs check-expiration<br></code></pre></td></tr></table></figure><h1 id="3-备份-etc-kubernetes"><a href="#3-备份-etc-kubernetes" class="headerlink" title="3 备份&#x2F;etc&#x2F;kubernetes"></a>3 备份&#x2F;etc&#x2F;kubernetes</h1><p><strong>所有master节点都要操作</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">cp</span> -ar /etc/kubernetes /etc/kubernetes.old<br></code></pre></td></tr></table></figure><h1 id="4-更新证书"><a href="#4-更新证书" class="headerlink" title="4 更新证书"></a>4 更新证书</h1><p><strong>所有master节点都要操作</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">kubeadm certs renew all<br></code></pre></td></tr></table></figure><h1 id="5-更新config文件"><a href="#5-更新config文件" class="headerlink" title="5 更新config文件"></a>5 更新config文件</h1><p>在需要执行kubectl命令的master节点操作，本文中只在master1节点执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mv</span> config config.old<br><span class="hljs-built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="hljs-variable">$HOME</span>/.kube/config<br></code></pre></td></tr></table></figure><h1 id="6-重启控制平面Pod"><a href="#6-重启控制平面Pod" class="headerlink" title="6 重启控制平面Pod"></a>6 重启控制平面Pod</h1><p><strong>所有master节点都要操作</strong></p><p>目前动态证书重载还不被所有组件和证书支持，因此需要重启控制平面Pod（<code>kube-apiserver</code>,<code>kube-controller</code>,<code>kube-scheduler</code>,<code>etcd</code>）。目前有两种重启方案，为防止误操作，推荐方案2。</p><p><strong>方案1：</strong></p><p>由于控制平面Pod为静态Pod，因此官方给出的方案是将其清单文件从目录<code>/etc/kubernetes/manifests/</code>中移除并等待20秒，此时清单目录中没有yamls文件，kubelet会终止相关Pod。而后再将清单文件放回去，kubectl可以完成Pod的重建，而证书也可以重新加载。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">root@master1:~# <span class="hljs-built_in">ls</span> /etc/kubernetes/manifests/<br>etcd.yaml  kube-apiserver.yaml  kube-controller-manager.yaml  kube-scheduler.yaml<br></code></pre></td></tr></table></figure><p><strong>方案2：</strong></p><p>直接在所有控制平面节点找到四个容器，重启。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">docker ps | grep -v pause | grep -E <span class="hljs-string">&quot;etcd|scheduler|controller|apiserver&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $1&#125;&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print &quot;docker&quot;,&quot;restart&quot;,$1&#125;&#x27;</span> | bash<br></code></pre></td></tr></table></figure><h1 id="7-参考文档"><a href="#7-参考文档" class="headerlink" title="7 参考文档"></a>7 参考文档</h1><ol><li><a href="https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/">https://kubernetes.io/zh-cn/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/</a></li><li><a href="https://blog.csdn.net/a772304419/article/details/134254031">https://blog.csdn.net/a772304419/article/details/134254031</a></li><li><a href="https://www.cnblogs.com/zoujiaojiao/p/15161862.html">https://www.cnblogs.com/zoujiaojiao/p/15161862.html</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>kubernetes</category>
      
      <category>集群维护</category>
      
    </categories>
    
    
    <tags>
      
      <tag>kubernetes</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MinIO基于Linux部署</title>
    <link href="/2024/08/02/MinIO%E5%9F%BA%E4%BA%8ELinux%E9%83%A8%E7%BD%B2/"/>
    <url>/2024/08/02/MinIO%E5%9F%BA%E4%BA%8ELinux%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h2><p>目前使用Minio作为对象存储非常普遍，本文根据<a href="https://min.io/docs/minio/linux/operations/installation.html">MinIO官方文档</a>说明，进行了MinIO在Linux上的部署。</p><p>共有三种方式：</p><ul><li>单节点单磁盘：Single-Node Single-Drive</li><li>单节点多磁盘：Single-Node Multi-Drive</li><li>多节点多磁盘：Multi-Node Multi-Drive</li></ul><p>同时给出了Nginx代理说明</p><h2 id="2-单节点单磁盘-Single-Node-Single-Drive"><a href="#2-单节点单磁盘-Single-Node-Single-Drive" class="headerlink" title="2 单节点单磁盘(Single-Node Single-Drive)"></a>2 单节点单磁盘(Single-Node Single-Drive)</h2><ol><li>下载minio server软件包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#部署方式：rpm/deb包方式部署(本文以centos为例)</span><br><span class="hljs-comment">#centos</span><br>[root@kuma7 ~]# wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio-20230131022419.0.0.x86_64.rpm -O minio.rpm<br>[root@kuma7 ~]# yum -y install minio.rpm<br>[root@kuma7 ~]# rpm -ql minio<br>/etc/systemd/system/minio.service<br>/usr/local/bin/minio<br><br><span class="hljs-comment">#由上面的信息可以看出，该rpm包就包含两部分：serivce unit文件和二进制程序。</span><br><br><span class="hljs-comment">#ubuntu</span><br>$ wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20230131022419.0.0_amd64.deb -O minio.deb<br>$ <span class="hljs-built_in">sudo</span> dpkg -i minio.deb<br></code></pre></td></tr></table></figure><ol start="2"><li><p>创建用户与准备磁盘</p><p>正常来说，会将整块磁盘格式化挂载以后，被minio使用；由于部署测试环境，本文将一个空目录作为minio的存储卷，并未为其准备一个单独的磁盘。</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#创建用户: minio-user，由于service unit文件中使用该用户启用服务，因此需要创建该用户与组，并将服务所用目录的属主属组也作相应修改。</span><br>[root@kuma7 ~]# groupadd -r minio-user<br>[root@kuma7 ~]# useradd -M -r -g minio-user minio-user<br><br><span class="hljs-comment">#创建目录，并修改属主属组</span><br>[root@kuma7 ~]# <span class="hljs-built_in">mkdir</span> /data/test1 -pv<br>[root@kuma7 ~]# <span class="hljs-built_in">chown</span> minio-user:minio-user /data/test1<br></code></pre></td></tr></table></figure><ol start="3"><li>创建环境变量文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# <span class="hljs-built_in">cat</span> &gt; /etc/default/minio &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string"># MINIO_ROOT_USER and MINIO_ROOT_PASSWORD sets the root account for the MinIO server.</span><br><span class="hljs-string"># This user has unrestricted permissions to perform S3 and administrative API operations on any resource in the deployment.</span><br><span class="hljs-string"># Omit to use the default values &#x27;minioadmin:minioadmin&#x27;.</span><br><span class="hljs-string"># MinIO recommends setting non-default values as a best practice, regardless of environment</span><br><span class="hljs-string"></span><br><span class="hljs-string">MINIO_ROOT_USER=admin</span><br><span class="hljs-string">MINIO_ROOT_PASSWORD=abcd@1234</span><br><span class="hljs-string"></span><br><span class="hljs-string"># MINIO_VOLUMES sets the storage volume or path to use for the MinIO server.</span><br><span class="hljs-string"></span><br><span class="hljs-string">MINIO_VOLUMES=&quot;/data/test1&quot;</span><br><span class="hljs-string">MINIO_OPTS=&quot;--address 0.0.0.0:9000 --console-address 0.0.0.0:9001&quot;</span><br><span class="hljs-string"></span><br><span class="hljs-string"># MINIO_SERVER_URL sets the hostname of the local machine for use with the MinIO Server</span><br><span class="hljs-string"># MinIO assumes your network control plane can correctly resolve this hostname to the local machine</span><br><span class="hljs-string"></span><br><span class="hljs-string"># Uncomment the following line and replace the value with the correct hostname for the local machine.</span><br><span class="hljs-string"></span><br><span class="hljs-string">#MINIO_SERVER_URL=&quot;http://minio.example.net&quot;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><ol start="4"><li>启动服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# systemctl <span class="hljs-built_in">enable</span> --now minio<br><br><span class="hljs-comment">#端口情况</span><br><span class="hljs-comment"># api端口：9000，console端口：9001</span><br>[root@kuma7 ~]# netstat -tnlp<br>Active Internet connections (only servers)<br>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    <br>tcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN      16749/minio         <br>tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      6565/sshd           <br>tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      6957/master         <br>tcp6       0      0 :::9000                 :::*                    LISTEN      16749/minio         <br>tcp6       0      0 ::1:9000                :::*                    LISTEN      16749/minio         <br>tcp6       0      0 :::9001                 :::*                    LISTEN      16749/minio         <br>tcp6       0      0 :::22                   :::*                    LISTEN      6565/sshd           <br>tcp6       0      0 ::1:25                  :::*                    LISTEN      6957/master<br></code></pre></td></tr></table></figure><ol start="5"><li>服务健康性检测</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# curl -I http://10.0.0.7:9000/minio/health/live<br>HTTP/1.1 200 OK<br>Accept-Ranges: bytes<br>Content-Length: 0<br>Content-Security-Policy: block-all-mixed-content<br>Server: MinIO<br>Strict-Transport-Security: max-age=31536000; includeSubDomains<br>Vary: Origin<br>X-Amz-Id-2: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855<br>X-Amz-Request-Id: 173F90FF09C096E8<br>X-Content-Type-Options: nosniff<br>X-Xss-Protection: 1; mode=block<br>Date: Wed, 01 Feb 2023 02:03:31 GMT<br></code></pre></td></tr></table></figure><ol start="6"><li>console访问测试</li></ol><p><img src="/2024/08/02/MinIO%E5%9F%BA%E4%BA%8ELinux%E9%83%A8%E7%BD%B2/post-bg-minio1.png" alt="post-bg-minio1.png"></p><p>注意：由于创建了一个bucket（kuma），因此可以看到相关信息。</p><h2 id="3-单节点多磁盘（Single-Node-Multi-Drive）"><a href="#3-单节点多磁盘（Single-Node-Multi-Drive）" class="headerlink" title="3 单节点多磁盘（Single-Node Multi-Drive）"></a>3 单节点多磁盘（Single-Node Multi-Drive）</h2><p>单节点多磁盘的部署方式，可提供磁盘级别的可靠性和故障域，建议将单独分区挂载到一个目录上，被minio所使用，充分利用磁盘的IO能力。</p><p><strong>节点与磁盘数量建议</strong></p><p><a href="https://github.com/minio/minio/blob/master/docs/distributed/SIZING.md">https://github.com/minio/minio/blob/master/docs/distributed/SIZING.md</a></p><p>由建议得知，单节点的磁盘数最少为4，因此本文中使用4块磁盘。</p><blockquote><p><strong>Erasure code sizing guide</strong></p><p><strong>Toy Setups</strong></p><p>Capacity constrained environments, MinIO will work but not recommended for production.</p><table><thead><tr><th align="right">servers</th><th align="right">drives (per node)</th><th align="right">stripe_size</th><th align="right">parity chosen (default)</th><th align="right">tolerance for reads (servers)</th><th align="right">tolerance for writes (servers)</th></tr></thead><tbody><tr><td align="right">1</td><td align="right">1</td><td align="right">1</td><td align="right">0</td><td align="right">0</td><td align="right">0</td></tr><tr><td align="right">1</td><td align="right">4</td><td align="right">4</td><td align="right">2</td><td align="right">0</td><td align="right">0</td></tr><tr><td align="right">4</td><td align="right">1</td><td align="right">4</td><td align="right">2</td><td align="right">2</td><td align="right">1</td></tr><tr><td align="right">5</td><td align="right">1</td><td align="right">5</td><td align="right">2</td><td align="right">2</td><td align="right">2</td></tr><tr><td align="right">6</td><td align="right">1</td><td align="right">6</td><td align="right">3</td><td align="right">3</td><td align="right">2</td></tr><tr><td align="right">7</td><td align="right">1</td><td align="right">7</td><td align="right">3</td><td align="right">3</td><td align="right">3</td></tr></tbody></table><p><strong>Minimum System Configuration for Production</strong></p><table><thead><tr><th align="right">servers</th><th align="right">drives (per node)</th><th align="right">stripe_size</th><th align="right">parity chosen (default)</th><th align="right">tolerance for reads (servers)</th><th align="right">tolerance for writes (servers)</th></tr></thead><tbody><tr><td align="right">4</td><td align="right">2</td><td align="right">8</td><td align="right">4</td><td align="right">2</td><td align="right">1</td></tr><tr><td align="right">5</td><td align="right">2</td><td align="right">10</td><td align="right">4</td><td align="right">2</td><td align="right">2</td></tr><tr><td align="right">6</td><td align="right">2</td><td align="right">12</td><td align="right">4</td><td align="right">2</td><td align="right">2</td></tr><tr><td align="right">7</td><td align="right">2</td><td align="right">14</td><td align="right">4</td><td align="right">2</td><td align="right">2</td></tr><tr><td align="right">8</td><td align="right">1</td><td align="right">8</td><td align="right">4</td><td align="right">4</td><td align="right">3</td></tr><tr><td align="right">8</td><td align="right">2</td><td align="right">16</td><td align="right">4</td><td align="right">2</td><td align="right">2</td></tr><tr><td align="right">9</td><td align="right">2</td><td align="right">9</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr><tr><td align="right">10</td><td align="right">2</td><td align="right">10</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr><tr><td align="right">11</td><td align="right">2</td><td align="right">11</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr><tr><td align="right">12</td><td align="right">2</td><td align="right">12</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr><tr><td align="right">13</td><td align="right">2</td><td align="right">13</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr><tr><td align="right">14</td><td align="right">2</td><td align="right">14</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr><tr><td align="right">15</td><td align="right">2</td><td align="right">15</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr><tr><td align="right">16</td><td align="right">2</td><td align="right">16</td><td align="right">4</td><td align="right">4</td><td align="right">4</td></tr></tbody></table><p>If one or more disks are offline at the start of a PutObject or NewMultipartUpload operation the object will have additional data<br>protection bits added automatically to provide the regular safety for these objects up to 50% of the number of disks.<br>This will allow normal write operations to take place on systems that exceed the write tolerance.</p><p>This means that in the examples above the system will always write 4 parity shards at the expense of slightly higher disk usage.</p></blockquote><p><strong>部署说明</strong></p><ul><li>minio推荐采用直连式JBOD（spanning，磁盘簇）的磁盘（raid可能会降低性能）；xfs格式；</li></ul><blockquote><p>MinIO strongly recommends direct-attached JBOD arrays with XFS-formatted disks for best performance.</p></blockquote><ul><li>确保磁盘类型一致（NVMe, SSD, HDD），容量相同；（minio不能区分磁盘类型，若多块磁盘的容量不同，minio以容量最小的磁盘确定其存储能力）</li><li>建议将磁盘挂载写入&#x2F;etc&#x2F;fstab中，以保证启动顺序不变；</li><li>如果磁盘类型是NFS及其他网络存储类型，minio不能保证其一致性。</li><li>minio强烈不建议使用rootfs的磁盘（会报错），因此需要挂载磁盘（而不能使用目录）。</li></ul><ol><li>下载minio server软件包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#部署方式：rpm/deb包方式部署(本文以centos为例)</span><br><span class="hljs-comment">#centos</span><br>[root@kuma7 ~]# wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio-20230131022419.0.0.x86_64.rpm -O minio.rpm<br>[root@kuma7 ~]# yum -y install minio.rpm<br>[root@kuma7 ~]# rpm -ql minio<br>/etc/systemd/system/minio.service<br>/usr/local/bin/minio<br><br><span class="hljs-comment">#由上面的信息可以看出，该rpm包就包含两部分：serivce unit文件和二进制程序。</span><br><br><span class="hljs-comment">#ubuntu</span><br>$ wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20230131022419.0.0_amd64.deb -O minio.deb<br>$ <span class="hljs-built_in">sudo</span> dpkg -i minio.deb<br></code></pre></td></tr></table></figure><ol start="2"><li><p>创建用户与准备磁盘</p><p>创建用户：minio-user，由于service unit文件中使用该用户启用服务，因此需要创建该用户与组，并将服务所用目录的属主属组也作相应修改。</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# groupadd -r minio-user<br>[root@kuma7 ~]# useradd -M -r -g minio-user minio-user<br></code></pre></td></tr></table></figure><p>​挂载磁盘：准备4块磁盘，分别将其挂载到&#x2F;minio&#x2F;disk{1,2,3,4}下，文件系统格式为xfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# <span class="hljs-built_in">mkdir</span> /minio/disk&#123;1,2,3,4&#125; -pv<br>[root@kuma7 ~]# <span class="hljs-built_in">chown</span> -R minio-user:minio-user /minio<br><br><span class="hljs-comment">#磁盘分区、格式化文件系统、挂载</span><br><span class="hljs-comment"># 共有/dev/sdb、/dev/sdc、/dev/sdd、/dev/sde共四块磁盘</span><br>[root@kuma7 ~]# lsblk<br>NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sda               8:0    0   50G  0 disk <br>├─sda1            8:1    0  256M  0 part /boot<br>└─sda2            8:2    0 49.8G  0 part <br>  ├─centos-root 253:0    0 47.8G  0 lvm  /<br>  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]<br>sdb               8:16   0   50G  0 disk <br>sdc               8:32   0   50G  0 disk <br>sdd               8:48   0   50G  0 disk <br>sde               8:64   0   50G  0 disk <br>sr0              11:0    1 1024M  0 rom<br><br><span class="hljs-comment">#分区</span><br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sdb<br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sdc<br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sdd<br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sde<br><br><span class="hljs-comment">#格式化文件系统</span><br>[root@kuma7 ~]# mkfs.xfs /dev/sdb1<br>[root@kuma7 ~]# mkfs.xfs /dev/sdc1<br>[root@kuma7 ~]# mkfs.xfs /dev/sdd1<br>[root@kuma7 ~]# mkfs.xfs /dev/sde1<br><br><span class="hljs-comment">#磁盘挂载持久化到/etc/fstab</span><br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sdb1 /minio/disk1 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab <br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sdc1 /minio/disk2 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab <br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sdd1 /minio/disk3 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab <br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sde1 /minio/disk4 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab<br><br><span class="hljs-comment">#磁盘挂载</span><br>[root@kuma7 ~]# mount -a<br><br><span class="hljs-comment">#查看</span><br>[root@kuma7 ~]# <span class="hljs-built_in">df</span> -h<br>Filesystem               Size  Used Avail Use% Mounted on<br>/dev/mapper/centos-root   48G  2.0G   46G   5% /<br>devtmpfs                 898M     0  898M   0% /dev<br>tmpfs                    910M     0  910M   0% /dev/shm<br>tmpfs                    910M  9.6M  901M   2% /run<br>tmpfs                    910M     0  910M   0% /sys/fs/cgroup<br>/dev/sda1                253M  127M  127M  50% /boot<br>tmpfs                    182M     0  182M   0% /run/user/0<br>/dev/sdb1                 50G   33M   50G   1% /minio/disk1<br>/dev/sdc1                 50G   33M   50G   1% /minio/disk2<br>/dev/sdd1                 50G   33M   50G   1% /minio/disk3<br>/dev/sde1                 50G   33M   50G   1% /minio/disk4<br></code></pre></td></tr></table></figure><ol start="3"><li>创建环境变量文件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# <span class="hljs-built_in">cat</span> &gt; /etc/default/minio &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">MINIO_ROOT_USER=admin</span><br><span class="hljs-string">MINIO_ROOT_PASSWORD=abcd@1234</span><br><span class="hljs-string">MINIO_VOLUMES=&quot;/minio/disk1 /minio/disk2 /minio/disk3 /minio/disk4&quot;                                                             </span><br><span class="hljs-string">MINIO_OPTS=&quot;--address 0.0.0.0:9000 --console-address 0.0.0.0:9001&quot;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><ol start="4"><li>启动服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# systemctl <span class="hljs-built_in">enable</span> --now minio<br><br><span class="hljs-comment">#端口情况</span><br><span class="hljs-comment"># api端口：9000，console端口：9001</span><br>[root@kuma7 ~]# netstat -tnlp<br>Active Internet connections (only servers)<br>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    <br>tcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN      16749/minio         <br>tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      6565/sshd           <br>tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      6957/master         <br>tcp6       0      0 :::9000                 :::*                    LISTEN      16749/minio         <br>tcp6       0      0 ::1:9000                :::*                    LISTEN      16749/minio         <br>tcp6       0      0 :::9001                 :::*                    LISTEN      16749/minio         <br>tcp6       0      0 :::22                   :::*                    LISTEN      6565/sshd           <br>tcp6       0      0 ::1:25                  :::*                    LISTEN      6957/master<br></code></pre></td></tr></table></figure><ol start="5"><li>服务健康性检测</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# curl -I http://10.0.0.7:9000/minio/health/live<br>HTTP/1.1 200 OK<br>Accept-Ranges: bytes<br>Content-Length: 0<br>Content-Security-Policy: block-all-mixed-content<br>Server: MinIO<br>Strict-Transport-Security: max-age=31536000; includeSubDomains<br>Vary: Origin<br>X-Amz-Id-2: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855<br>X-Amz-Request-Id: 173F90FF09C096E8<br>X-Content-Type-Options: nosniff<br>X-Xss-Protection: 1; mode=block<br>Date: Wed, 01 Feb 2023 02:03:31 GMT<br></code></pre></td></tr></table></figure><ol start="6"><li>console访问测试</li></ol><p><img src="/2024/08/02/MinIO%E5%9F%BA%E4%BA%8ELinux%E9%83%A8%E7%BD%B2/post-bg-minio2.png" alt="post-bg-minio2.png"></p><h2 id="4-多节点多磁盘（Multi-Node-Multi-Drive）"><a href="#4-多节点多磁盘（Multi-Node-Multi-Drive）" class="headerlink" title="4 多节点多磁盘（Multi-Node Multi-Drive）"></a>4 多节点多磁盘（Multi-Node Multi-Drive）</h2><p>可提供企业级性能、可靠性、可扩展性，<strong>生产环境推荐</strong>。</p><p>采用纠删码机制保证高可靠性，可容忍一半的节点或磁盘的丢失。</p><p>所有minio server必须使用相同的监听端口（9000）。（防火墙放开相关权限）</p><p>推荐使用负载均衡（nginx、haproxy）代理minio的访问，推荐算法：Least Connections（最少连接）。</p><p>磁盘相关：</p><ul><li>minio推荐采用直连式JBOD（spanning，磁盘簇）的磁盘（raid可能会降低性能）；xfs格式；</li></ul><blockquote><p>MinIO strongly recommends direct-attached JBOD arrays with XFS-formatted disks for best performance.</p></blockquote><ul><li>确保磁盘类型一致（NVMe, SSD, HDD），容量相同；（minio不能区分磁盘类型，若多块磁盘的容量不同，minio以容量最小的磁盘确定其存储能力）</li><li>建议将磁盘挂载写入&#x2F;etc&#x2F;fstab中，以保证启动顺序不变；</li><li>如果磁盘类型是NFS及其他网络存储类型，minio不能保证其一致性。</li><li>minio强烈不建议使用rootfs的磁盘（会报错），因此需要挂载磁盘（而不能使用目录）。</li></ul><p>节点与磁盘数：</p><p>4节点，每个节点4块磁盘</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs accesslog"><span class="hljs-number">10.0.0.7</span>/dev/sdb、/dev/sdc、/dev/sdd、/dev/sde<br><span class="hljs-number">10.0.0.17</span>/dev/sdb、/dev/sdc、/dev/sdd、/dev/sde<br><span class="hljs-number">10.0.0.27</span>/dev/sdb、/dev/sdc、/dev/sdd、/dev/sde<br><span class="hljs-number">10.0.0.37</span>/dev/sdb、/dev/sdc、/dev/sdd、/dev/sde<br></code></pre></td></tr></table></figure><ol><li>下载minio server软件包（<strong>所有节点</strong>）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#部署方式：rpm/deb包方式部署(本文以centos为例)</span><br><span class="hljs-comment">#centos</span><br>[root@kuma7 ~]# wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio-20230131022419.0.0.x86_64.rpm -O minio.rpm<br>[root@kuma7 ~]# yum -y install minio.rpm<br>[root@kuma7 ~]# rpm -ql minio<br>/etc/systemd/system/minio.service<br>/usr/local/bin/minio<br><br><span class="hljs-comment">#由上面的信息可以看出，该rpm包就包含两部分：serivce unit文件和二进制程序。</span><br><br><span class="hljs-comment">#ubuntu</span><br>$ wget https://dl.min.io/server/minio/release/linux-amd64/archive/minio_20230131022419.0.0_amd64.deb -O minio.deb<br>$ <span class="hljs-built_in">sudo</span> dpkg -i minio.deb<br></code></pre></td></tr></table></figure><ol start="2"><li><p>创建用户与准备磁盘（<strong>所有节点</strong>）</p><p>创建用户：minio-user，由于service unit文件中使用该用户启用服务，因此需要创建该用户与组，并将服务所用目录的属主属组也作相应修改。</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# groupadd -r minio-user<br>[root@kuma7 ~]# useradd -M -r -g minio-user minio-user<br></code></pre></td></tr></table></figure><p>​挂载磁盘：准备4块磁盘，分别将其挂载到&#x2F;minio&#x2F;disk{1,2,3,4}下，文件系统格式为xfs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# <span class="hljs-built_in">mkdir</span> /minio/disk&#123;1,2,3,4&#125; -pv<br>[root@kuma7 ~]# <span class="hljs-built_in">chown</span> -R minio-user:minio-user /minio<br><br><span class="hljs-comment">#磁盘分区、格式化文件系统、挂载</span><br><span class="hljs-comment"># 共有/dev/sdb、/dev/sdc、/dev/sdd、/dev/sde共四块磁盘</span><br>[root@kuma7 ~]# lsblk<br>NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT<br>sda               8:0    0   50G  0 disk <br>├─sda1            8:1    0  256M  0 part /boot<br>└─sda2            8:2    0 49.8G  0 part <br>  ├─centos-root 253:0    0 47.8G  0 lvm  /<br>  └─centos-swap 253:1    0    2G  0 lvm  [SWAP]<br>sdb               8:16   0   50G  0 disk <br>sdc               8:32   0   50G  0 disk <br>sdd               8:48   0   50G  0 disk <br>sde               8:64   0   50G  0 disk <br>sr0              11:0    1 1024M  0 rom<br><br><span class="hljs-comment">#分区</span><br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sdb<br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sdc<br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sdd<br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;n\n\n\n\n\nw\n&#x27;</span> | fdisk /dev/sde<br><br><span class="hljs-comment">#格式化文件系统</span><br>[root@kuma7 ~]# mkfs.xfs /dev/sdb1<br>[root@kuma7 ~]# mkfs.xfs /dev/sdc1<br>[root@kuma7 ~]# mkfs.xfs /dev/sdd1<br>[root@kuma7 ~]# mkfs.xfs /dev/sde1<br><br><span class="hljs-comment">#磁盘挂载持久化到/etc/fstab</span><br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sdb1 /minio/disk1 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab <br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sdc1 /minio/disk2 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab <br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sdd1 /minio/disk3 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab <br>[root@kuma7 ~]# <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;/dev/sde1 /minio/disk4 xfs defaults,noatime 0 0&quot;</span> &gt;&gt; /etc/fstab<br><br><span class="hljs-comment">#磁盘挂载</span><br>[root@kuma7 ~]# mount -a<br><br><span class="hljs-comment">#查看</span><br>[root@kuma7 ~]# <span class="hljs-built_in">df</span> -h<br>Filesystem               Size  Used Avail Use% Mounted on<br>/dev/mapper/centos-root   48G  2.0G   46G   5% /<br>devtmpfs                 898M     0  898M   0% /dev<br>tmpfs                    910M     0  910M   0% /dev/shm<br>tmpfs                    910M  9.6M  901M   2% /run<br>tmpfs                    910M     0  910M   0% /sys/fs/cgroup<br>/dev/sda1                253M  127M  127M  50% /boot<br>tmpfs                    182M     0  182M   0% /run/user/0<br>/dev/sdb1                 50G   33M   50G   1% /minio/disk1<br>/dev/sdc1                 50G   33M   50G   1% /minio/disk2<br>/dev/sdd1                 50G   33M   50G   1% /minio/disk3<br>/dev/sde1                 50G   33M   50G   1% /minio/disk4<br><br><span class="hljs-comment">#修改权限（磁盘挂载后，属主属组变为了root:root）</span><br>[root@kuma7 ~]# <span class="hljs-built_in">chown</span> -R minio-user:minio-user /minio<br></code></pre></td></tr></table></figure><ol start="3"><li>创建环境变量文件（<strong>所有节点</strong>）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# <span class="hljs-built_in">cat</span> &gt; /etc/default/minio &lt;&lt;<span class="hljs-string">EOF</span><br><span class="hljs-string">MINIO_ROOT_USER=admin</span><br><span class="hljs-string">MINIO_ROOT_PASSWORD=abcd@1234</span><br><span class="hljs-string">MINIO_VOLUMES=&quot;http://10.0.0.7:9000/minio/disk1 http://10.0.0.7:9000/minio/disk2 http://10.0.0.7:9000/minio/disk3 http://10.0.0.7:9000/minio/disk4 http://10.0.0.17:9000/minio/disk1 http://10.0.0.17:9000/minio/disk2 http://10.0.0.17:9000/minio/disk3 http://10.0.0.17:9000/minio/disk4 http://10.0.0.27:9000/minio/disk1 http://10.0.0.27:9000/minio/disk2 http://10.0.0.27:9000/minio/disk3 http://10.0.0.27:9000/minio/disk4 http://10.0.0.37:9000/minio/disk1 http://10.0.0.37:9000/minio/disk2 http://10.0.0.37:9000/minio/disk3 http://10.0.0.37:9000/minio/disk4&quot;                                                           </span><br><span class="hljs-string">MINIO_OPTS=&quot;--address 0.0.0.0:9000 --console-address 0.0.0.0:9001&quot;</span><br><span class="hljs-string">EOF</span><br></code></pre></td></tr></table></figure><ol start="4"><li>启动服务（<strong>所有节点</strong>）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma7 ~]# systemctl <span class="hljs-built_in">enable</span> --now minio<br><br><span class="hljs-comment">#端口情况</span><br><span class="hljs-comment"># api端口：9000，console端口：9001</span><br>[root@kuma7 ~]# netstat -tnlp<br>Active Internet connections (only servers)<br>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    <br>tcp        0      0 127.0.0.1:9000          0.0.0.0:*               LISTEN      16749/minio         <br>tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      6565/sshd           <br>tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN      6957/master         <br>tcp6       0      0 :::9000                 :::*                    LISTEN      16749/minio         <br>tcp6       0      0 ::1:9000                :::*                    LISTEN      16749/minio         <br>tcp6       0      0 :::9001                 :::*                    LISTEN      16749/minio         <br>tcp6       0      0 :::22                   :::*                    LISTEN      6565/sshd           <br>tcp6       0      0 ::1:25                  :::*                    LISTEN      6957/master<br></code></pre></td></tr></table></figure><ol start="5"><li>服务健康性检测（<strong>所有节点</strong>）</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@kuma37 ~]# curl -I http://10.0.0.7:9000/minio/health/live<br>HTTP/1.1 200 OK<br>Accept-Ranges: bytes<br>Content-Length: 0<br>Content-Security-Policy: block-all-mixed-content<br>Server: MinIO<br>Strict-Transport-Security: max-age=31536000; includeSubDomains<br>Vary: Origin<br>X-Amz-Id-2: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855<br>X-Amz-Request-Id: 17412DA5BDCAD063<br>X-Content-Type-Options: nosniff<br>X-Xss-Protection: 1; mode=block<br>Date: Mon, 06 Feb 2023 08:05:26 GMT<br><br>[root@kuma37 ~]# curl -I http://10.0.0.17:9000/minio/health/live<br>HTTP/1.1 200 OK<br>Accept-Ranges: bytes<br>Content-Length: 0<br>Content-Security-Policy: block-all-mixed-content<br>Server: MinIO<br>Strict-Transport-Security: max-age=31536000; includeSubDomains<br>Vary: Origin<br>X-Amz-Id-2: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855<br>X-Amz-Request-Id: 17412DA6A322DED5<br>X-Content-Type-Options: nosniff<br>X-Xss-Protection: 1; mode=block<br>Date: Mon, 06 Feb 2023 08:05:30 GMT<br><br>[root@kuma37 ~]# curl -I http://10.0.0.27:9000/minio/health/live<br>HTTP/1.1 200 OK<br>Accept-Ranges: bytes<br>Content-Length: 0<br>Content-Security-Policy: block-all-mixed-content<br>Server: MinIO<br>Strict-Transport-Security: max-age=31536000; includeSubDomains<br>Vary: Origin<br>X-Amz-Id-2: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855<br>X-Amz-Request-Id: 17412DA7A5AC6923<br>X-Content-Type-Options: nosniff<br>X-Xss-Protection: 1; mode=block<br>Date: Mon, 06 Feb 2023 08:05:34 GMT<br><br>[root@kuma37 ~]# curl -I http://10.0.0.37:9000/minio/health/live<br>HTTP/1.1 200 OK<br>Accept-Ranges: bytes<br>Content-Length: 0<br>Content-Security-Policy: block-all-mixed-content<br>Server: MinIO<br>Strict-Transport-Security: max-age=31536000; includeSubDomains<br>Vary: Origin<br>X-Amz-Id-2: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855<br>X-Amz-Request-Id: 17412DA86997C01C<br>X-Content-Type-Options: nosniff<br>X-Xss-Protection: 1; mode=block<br>Date: Mon, 06 Feb 2023 08:05:37 GMT<br></code></pre></td></tr></table></figure><ol start="6"><li>console访问测试</li></ol><p><img src="/2024/08/02/MinIO%E5%9F%BA%E4%BA%8ELinux%E9%83%A8%E7%BD%B2/post-bg-minio3.png" alt="post-bg-minio3.png"></p><h2 id="5-nginx代理minio-server"><a href="#5-nginx代理minio-server" class="headerlink" title="5 nginx代理minio server"></a>5 nginx代理minio server</h2><p>对于Api来说，主要有两种方式：</p><p>1）根代理：代理层（nginx）为minio提供单独的端口或域名，将&#x2F;代理到minio；</p><p>2）桶代理：如果nginx不能为minio提供单独的域名或者端口时，可以将bucket单独代理出去；</p><p>对于console来说，直接将9001通过uri代理即可（略）。</p><p><strong>根代理</strong></p><p>官方提供的示例配置文件：</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">server</span> &#123;<br> <span class="hljs-attribute">listen</span> <span class="hljs-number">80</span>;<br> <span class="hljs-attribute">server_name</span> example.com;<br><br> <span class="hljs-comment"># To allow special characters in headers</span><br> <span class="hljs-attribute">ignore_invalid_headers</span> <span class="hljs-literal">off</span>;<br> <span class="hljs-comment"># Allow any size file to be uploaded.</span><br> <span class="hljs-comment"># Set to a value such as 1000m; to restrict file size to a specific value</span><br> <span class="hljs-attribute">client_max_body_size</span> <span class="hljs-number">0</span>;<br> <span class="hljs-comment"># To disable buffering</span><br> <span class="hljs-attribute">proxy_buffering</span> <span class="hljs-literal">off</span>;<br><br> <span class="hljs-section">location</span> / &#123;<br>   <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>   <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>   <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>   <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$http_host</span>;<br><br>   <span class="hljs-attribute">proxy_connect_timeout</span> <span class="hljs-number">300</span>;<br>   <span class="hljs-comment"># Default is HTTP/1, keepalive is only enabled in HTTP/1.1</span><br>   <span class="hljs-attribute">proxy_http_version</span> <span class="hljs-number">1</span>.<span class="hljs-number">1</span>;<br>   <span class="hljs-attribute">proxy_set_header</span> Connection <span class="hljs-string">&quot;&quot;</span>;<br>   <span class="hljs-attribute">chunked_transfer_encoding</span> <span class="hljs-literal">off</span>;<br><br>   <span class="hljs-attribute">proxy_pass</span> http://localhost:9000; <span class="hljs-comment"># If you are using docker-compose this would be the hostname i.e. minio</span><br>   <span class="hljs-comment"># Health Check endpoint might go here. See https://www.nginx.com/resources/wiki/modules/healthcheck/</span><br>   <span class="hljs-comment"># /minio/health/live;</span><br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>桶（bucket）代理</strong></p><p>示例配置文件：bucket名为：myBucket</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-section">location</span> /myBucket &#123;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Real-IP <span class="hljs-variable">$remote_addr</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-For <span class="hljs-variable">$proxy_add_x_forwarded_for</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> X-Forwarded-Proto <span class="hljs-variable">$scheme</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> Host <span class="hljs-variable">$http_host</span>;<br><br>        <span class="hljs-attribute">proxy_connect_timeout</span> <span class="hljs-number">300</span>;<br>        <span class="hljs-attribute">proxy_http_version</span> <span class="hljs-number">1</span>.<span class="hljs-number">1</span>;<br>        <span class="hljs-attribute">proxy_set_header</span> Connection <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-attribute">chunked_transfer_encoding</span> <span class="hljs-literal">off</span>;<br><br>        <span class="hljs-attribute">proxy_pass</span> http://10.0.0.20:9000;<br>    &#125;<br></code></pre></td></tr></table></figure><h1 id="6-参考文档"><a href="#6-参考文档" class="headerlink" title="6 参考文档"></a>6 参考文档</h1><p>1.<a href="https://min.io/docs/minio/linux/operations/installation.html">https://min.io/docs/minio/linux/operations/installation.html</a></p>]]></content>
    
    
    <categories>
      
      <category>存储</category>
      
      <category>MinIO</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MinIO</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
